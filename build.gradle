buildscript {
    ext.corda_release_group = 'net.corda'
    ext.corda_release_version = '4.0'
    ext.corda_gradle_plugins_version = '4.0.45'
    ext.kotlin_version = '1.2.71'
    ext.junit_version = '4.12'
    ext.quasar_version = '0.7.10'
    ext.log4j_version = '2.11.2'
    ext.corda_platform_version = '4'
    ext.netty_version = '4.1.22.Final'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

apply from: 'repositories.gradle'

apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

cordapp {
    targetPlatformVersion corda_platform_version.toInteger()
    minimumPlatformVersion corda_platform_version.toInteger()
    contract {
        name "noScalpDapp"
        vendor "Chainstack"
        licence "MIT"
        versionId 1
    }
    workflow {
        name "noScalpDapp"
        vendor "Chainstack"
        licence "MIT"
        versionId 1
    }
}

sourceSets {
    main {
        resources {
            srcDir "config/dev"
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Corda dependencies
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
    cordaCompile "$corda_release_group:corda-node-api:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    // CorDapp dependencies
    cordapp project(":noScalpDapp")
}

jar {
    // CorDapps do not configure a Node's logging.
    exclude '**/log4j2*.xml'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    nodeDefaults {
        cordapp "$project.group:noScalpDapp:$project.version"
    }
    node {
        name "O=Notary,L=Sydney,C=AU"
        notary = [validating: true]
        p2pPort 10002
        rpcSettings {
            address("localhost:10003")
            adminAddress("localhost:10043")
        }
    }
    node {
        name "O=DistributorA,L=New York,C=US"
        p2pPort 10005
        rpcSettings {
            address("localhost:10006")
            adminAddress("localhost:10046")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=DistributorB,L=Tokyo,C=JP"
        p2pPort 10008
        rpcSettings {
            address("localhost:10009")
            adminAddress("localhost:10049")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=DistributorC,L=Singapore,C=SG"
        p2pPort 10011
        rpcSettings {
            address("localhost:10012")
            adminAddress("localhost:10412")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
}
